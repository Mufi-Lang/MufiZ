// Test break and continue in foreach loops with vectors

print "Testing break in foreach loop:";
var vec1 = {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0};
foreach (item in vec1) {
    if (item == 5.0) {
        print "Breaking at item = 5";
        break;
    }
    print item;
}
print "After foreach loop with break";
print "";

print "Testing continue in foreach loop:";
var vec2 = {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0};
foreach (num in vec2) {
    var remainder = num % 2.0;
    if (remainder == 0.0) {
        continue;  // Skip even numbers
    }
    print num;  // Should only print odd numbers: 1, 3, 5, 7, 9
}
print "After foreach loop with continue";
print "";

print "Testing nested foreach loops with break and continue:";
var outer = {1.0, 2.0, 3.0};
var inner = {1.0, 2.0, 3.0, 4.0, 5.0};
foreach (x in outer) {
    print "Outer loop x = " + x;
    foreach (y in inner) {
        if (y == 2.0) {
            continue;  // Skip y = 2
        }
        if (y == 4.0) {
            break;  // Break inner loop at y = 4
        }
        print "  Inner loop y = " + y;
    }
}
print "After nested foreach loops";
print "";

// Test break and continue with more complex conditions
print "Testing complex break/continue logic:";
var count = 0;
var vec3 = {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0};
foreach (k in vec3) {
    var remainder = k % 3.0;
    if (remainder == 0.0) {
        continue;  // Skip multiples of 3
    }
    count = count + 1;
    if (count > 5) {
        break;  // Stop after processing 5 non-multiples of 3
    }
    print "Processed: " + k;
}
print "Total non-multiples of 3 processed: " + count;
print "";

// Test early continue
print "Testing early continue in foreach:";
var numbers = {10.0, 20.0, 30.0, 40.0, 50.0};
foreach (n in numbers) {
    if (n < 30.0) {
        continue;
    }
    print "Number >= 30: " + n;
}
print "";

// Test with immediate break
print "Testing immediate break:";
var vec4 = {100.0, 200.0, 300.0, 400.0};
foreach (val in vec4) {
    print "First value: " + val;
    break;  // Should only print first value
}
print "Done with immediate break test";
