// Test to find the pattern of foreach failures with different array sizes

print("=== Array Size Pattern Test ===");

print("Testing various array sizes to find the pattern...");

// Test size 1
print("\n--- Testing size 1 ---");
var arr1 = {100};
print("Array created: " + arr1);
print("Manual access arr1[0] = " + arr1[0]);
print("Foreach test:");
var count1 = 0;
foreach (val in arr1) {
    print("Size 1 - Value: " + val);
    count1 = count1 + 1;
}
print("Size 1 - Iterations executed: " + count1);

// Test size 2
print("\n--- Testing size 2 ---");
var arr2 = {100, 200};
print("Array created: " + arr2);
print("Manual access arr2[0] = " + arr2[0] + ", arr2[1] = " + arr2[1]);
print("Foreach test:");
var count2 = 0;
foreach (val in arr2) {
    print("Size 2 - Value: " + val);
    count2 = count2 + 1;
}
print("Size 2 - Iterations executed: " + count2);

// Test size 3
print("\n--- Testing size 3 ---");
var arr3 = {100, 200, 300};
print("Array created: " + arr3);
print("Manual access arr3[0] = " + arr3[0] + ", arr3[1] = " + arr3[1] + ", arr3[2] = " + arr3[2]);
print("Foreach test:");
var count3 = 0;
foreach (val in arr3) {
    print("Size 3 - Value: " + val);
    count3 = count3 + 1;
}
print("Size 3 - Iterations executed: " + count3);

// Test size 4
print("\n--- Testing size 4 ---");
var arr4 = {100, 200, 300, 400};
print("Array created: " + arr4);
print("Manual access test...");
print("arr4[0] = " + arr4[0]);
print("arr4[1] = " + arr4[1]);
print("arr4[2] = " + arr4[2]);
print("arr4[3] = " + arr4[3]);
print("Foreach test:");
var count4 = 0;
foreach (val in arr4) {
    print("Size 4 - Value: " + val);
    count4 = count4 + 1;
}
print("Size 4 - Iterations executed: " + count4);

// Test size 5
print("\n--- Testing size 5 ---");
var arr5 = {100, 200, 300, 400, 500};
print("Array created: " + arr5);
print("Manual access test...");
print("arr5[0] = " + arr5[0]);
print("arr5[1] = " + arr5[1]);
print("arr5[2] = " + arr5[2]);
print("arr5[3] = " + arr5[3]);
print("arr5[4] = " + arr5[4]);
print("Foreach test:");
var count5 = 0;
foreach (val in arr5) {
    print("Size 5 - Value: " + val);
    count5 = count5 + 1;
}
print("Size 5 - Iterations executed: " + count5);

// Test size 6
print("\n--- Testing size 6 ---");
var arr6 = {100, 200, 300, 400, 500, 600};
print("Array created: " + arr6);
print("Manual access test...");
print("arr6[0] = " + arr6[0]);
print("arr6[1] = " + arr6[1]);
print("arr6[2] = " + arr6[2]);
print("arr6[3] = " + arr6[3]);
print("arr6[4] = " + arr6[4]);
print("arr6[5] = " + arr6[5]);
print("Foreach test:");
var count6 = 0;
foreach (val in arr6) {
    print("Size 6 - Value: " + val);
    count6 = count6 + 1;
}
print("Size 6 - Iterations executed: " + count6);

// Test size 7
print("\n--- Testing size 7 ---");
var arr7 = {100, 200, 300, 400, 500, 600, 700};
print("Array created: " + arr7);
print("Foreach test:");
var count7 = 0;
foreach (val in arr7) {
    print("Size 7 - Value: " + val);
    count7 = count7 + 1;
}
print("Size 7 - Iterations executed: " + count7);

// Test size 8
print("\n--- Testing size 8 ---");
var arr8 = {100, 200, 300, 400, 500, 600, 700, 800};
print("Array created: " + arr8);
print("Foreach test:");
var count8 = 0;
foreach (val in arr8) {
    print("Size 8 - Value: " + val);
    count8 = count8 + 1;
}
print("Size 8 - Iterations executed: " + count8);

// Test size 10
print("\n--- Testing size 10 ---");
var arr10 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
print("Array created: " + arr10);
print("Foreach test:");
var count10 = 0;
foreach (val in arr10) {
    print("Size 10 - Value: " + val);
    count10 = count10 + 1;
}
print("Size 10 - Iterations executed: " + count10);

print("\n=== Summary ===");
print("Size 1 - Iterations: " + count1);
print("Size 2 - Iterations: " + count2);
print("Size 3 - Iterations: " + count3);
print("Size 4 - Iterations: " + count4);
print("Size 5 - Iterations: " + count5);
print("Size 6 - Iterations: " + count6);
print("Size 7 - Iterations: " + count7);
print("Size 8 - Iterations: " + count8);
print("Size 10 - Iterations: " + count10);

print("\n=== Size Pattern Test Complete ===");
