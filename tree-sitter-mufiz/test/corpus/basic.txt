==========================================
Variable Declaration
==========================================

var x = 5;
var name = "hello";
var flag = true;

---

(source_file
  (variable_declaration
    name: (identifier)
    value: (number))
  (variable_declaration
    name: (identifier)
    value: (string))
  (variable_declaration
    name: (identifier)
    value: (boolean)))

==========================================
Print Statement
==========================================

print "Hello World";
print x;
print 42.5;

---

(source_file
  (print_statement
    value: (string))
  (print_statement
    value: (identifier))
  (print_statement
    value: (number)))

==========================================
Function Declaration
==========================================

fun greet(name) {
    print "Hello " + name;
}

fun add(a, b) {
    return a + b;
}

---

(source_file
  (function_declaration
    name: (identifier)
    parameters: (parameter_list (identifier))
    body: (block_statement
      (print_statement
        value: (addition_expression
          left: (string)
          right: (identifier)))))
  (function_declaration
    name: (identifier)
    parameters: (parameter_list (identifier) (identifier))
    body: (block_statement
      (return_statement
        value: (addition_expression
          left: (identifier)
          right: (identifier))))))

==========================================
Foreach Loop
==========================================

foreach (item in collection) {
    print item;
}

foreach (x in {1.0, 2.0, 3.0}) {
    print x * 2;
}

---

(source_file
  (foreach_statement
    variable: (identifier)
    iterable: (identifier)
    body: (block_statement
      (print_statement
        value: (identifier))))
  (foreach_statement
    variable: (identifier)
    iterable: (vector_literal
      (number)
      (number)
      (number))
    body: (block_statement
      (print_statement
        value: (multiplication_expression
          left: (identifier)
          right: (number))))))

==========================================
Vector Literals
==========================================

var empty = {};
var numbers = {1.0, 2.0, 3.0};
var mixed = {x, "hello", 42};

---

(source_file
  (variable_declaration
    name: (identifier)
    value: (vector_literal))
  (variable_declaration
    name: (identifier)
    value: (vector_literal
      (number)
      (number)
      (number)))
  (variable_declaration
    name: (identifier)
    value: (vector_literal
      (identifier)
      (string)
      (number))))

==========================================
If Statement
==========================================

if (x > 5) {
    print "big";
} else {
    print "small";
}

if (flag)
    print "true";

---

(source_file
  (if_statement
    condition: (comparison_expression
      left: (identifier)
      right: (number))
    then: (block_statement
      (print_statement
        value: (string)))
    else: (block_statement
      (print_statement
        value: (string))))
  (if_statement
    condition: (identifier)
    then: (print_statement
      value: (string))))

==========================================
While Loop
==========================================

while (i < 10) {
    print i;
    i = i + 1;
}

---

(source_file
  (while_statement
    condition: (comparison_expression
      left: (identifier)
      right: (number))
    body: (block_statement
      (print_statement
        value: (identifier))
      (expression_statement
        (assignment_expression
          left: (identifier)
          right: (addition_expression
            left: (identifier)
            right: (number)))))))

==========================================
Complex Numbers
==========================================

var z1 = 3.0 + 4.0i;
var z2 = 1.5 - 2.5i;

---

(source_file
  (variable_declaration
    name: (identifier)
    value: (complex_number
      real: (number)
      imaginary: (number)))
  (variable_declaration
    name: (identifier)
    value: (complex_number
      real: (number)
      imaginary: (number))))

==========================================
Class Declaration
==========================================

class Person {
    init(name, age) {
        self.name = name;
        self.age = age;
    }
    
    greet() {
        print "Hello, I'm " + self.name;
    }
}

---

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        name: (identifier)
        parameters: (parameter_list (identifier) (identifier))
        body: (block_statement
          (expression_statement
            (assignment_expression
              left: (member_expression
                object: (self)
                property: (identifier))
              right: (identifier)))
          (expression_statement
            (assignment_expression
              left: (member_expression
                object: (self)
                property: (identifier))
              right: (identifier)))))
      (method_declaration
        name: (identifier)
        body: (block_statement
          (print_statement
            value: (addition_expression
              left: (string)
              right: (member_expression
                object: (self)
                property: (identifier)))))))))

==========================================
Comments
==========================================

// Single line comment
var x = 5; // End of line comment

---

(source_file
  (comment)
  (variable_declaration
    name: (identifier)
    value: (number))
  (comment))