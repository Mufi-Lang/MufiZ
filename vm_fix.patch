diff --git a/src/vm.zig b/src/vm.zig
index 5f29f3b6..d73b94bc 100644
--- a/src/vm.zig
+++ b/src/vm.zig
@@ -1431,7 +1431,10 @@ pub fn run() InterpretResult {
                     const start = start_value.as_num_int();
                     const end = end_value.as_num_int();

-                    // Create a new range object (exclusive)
+                    // We always create a range object first, so switch pattern matching
+                    // can work with it. For iteration contexts, the range will be
+                    // implicitly converted to an array by accessing its elements
+                    // through get_index operations.
                     const range = ObjRange.init(start, end, false);
                     push(Value.init_obj(@ptrCast(range)));
                     continue;
@@ -1454,7 +1457,10 @@ pub fn run() InterpretResult {
                     const start = start_value.as_num_int();
                     const end = end_value.as_num_int();

-                    // Create a new range object (inclusive)
+                    // We always create a range object first, so switch pattern matching
+                    // can work with it. For iteration contexts, the range will be
+                    // implicitly converted to an array by accessing its elements
+                    // through get_index operations.
                     const range = ObjRange.init(start, end, true);
                     push(Value.init_obj(@ptrCast(range)));
                     continue;
